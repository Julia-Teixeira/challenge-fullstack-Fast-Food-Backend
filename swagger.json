{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "Fast Food API",
    "description": "A API de Fast Food foi desenvolvida para atender às necessidades de um restaurante que oferece comidas rápidas, permitindo que registrem suas vendas de forma fácil e rápida, substituindo o método tradicional de comandas por um processo mais eficiente. Este serviço oferece uma interface intuitiva para listar os produtos mais vendidos e facilitar a inserção desses produtos no checkout. Além disso, a API proporciona um visual simples e moderno, garantindo uma experiência de usuário agradável.",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "juliapt95@gmail.com"
    },
    "license": {
      "name": "MIT",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "tags": [
    {
      "name": "product",
      "description": "Operations about Products"
    },
    {
      "name": "order",
      "description": "Operations about Order"
    },
    {
      "name": "productOrder",
      "description": "Operations about ProductOrder"
    },
    {
      "name": "category",
      "description": "Operations about Category"
    },
    {
      "name": "additional",
      "description": "Operations about Additional"
    }
  ],
  "paths": {
    "/products": {
      "post": {
        "tags": ["product"],
        "summary": "Create a new product",
        "description": "Create a new product in database",
        "operationId": "createProduct",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/productRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/product"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["product"],
        "summary": "Get all products",
        "description": "Retrieve all products in database",
        "operationId": "getAllProducts",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/product"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/products/additional": {
      "get": {
        "tags": ["product"],
        "summary": "Get all additional products",
        "description": "Retrieve all additional products in database",
        "operationId": "getAllAdditional",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/additional"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/products/{id}": {
      "get": {
        "tags": ["product"],
        "summary": "Get product by id",
        "description": "Retrieve product by id",
        "operationId": "getProductById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of product to return",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/product"
                }
              }
            }
          },
          "404": {
            "description": "Product not found"
          }
        }
      }
    },
    "/categories": {
      "post": {
        "tags": ["category"],
        "summary": "Create a new category",
        "description": "Create a new category in database",
        "operationId": "createCategory",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/categoryRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/categoryCreateResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["category"],
        "summary": "Get all categories",
        "description": "Retrieve all categories in database",
        "operationId": "getAllCategories",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/category"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/additionals": {
      "post": {
        "tags": ["additional"],
        "summary": "Create a new additional",
        "description": "Create a new additional in database",
        "operationId": "createAdditional",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/additionalRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/additional"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["additional"],
        "summary": "Get all additionals",
        "description": "Retrieve all additionals in database",
        "operationId": "getAllAdditionals",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/additional"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/productsOrders": {
      "post": {
        "tags": ["productOrder"],
        "summary": "Create a new productOrder",
        "description": "Create a new productOrder in database",
        "operationId": "createProductOrder",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/productOrderRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/productOrder"
                }
              }
            }
          }
        }
      }
    },
    "/productsOrders/{id}": {
      "delete": {
        "tags": ["productOrder"],
        "summary": "Delete a productOrder",
        "description": "Delete a productOrder",
        "operationId": "deleteProductOrder",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of productOrder to delete",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "ProductOrder deleted"
          }
        }
      }
    },
    "/orders": {
      "get": {
        "tags": ["order"],
        "summary": "Get all orders",
        "description": "Retrieve all orders in database",
        "operationId": "getAllOrders",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/orderGetResponse"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["order"],
        "summary": "Create a new order",
        "description": "Create a new order in database",
        "operationId": "createOrder",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/orderRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/order"
                }
              }
            }
          }
        }
      }
    },
    "/orders/{id}": {
      "get": {
        "tags": ["order"],
        "summary": "Get order by id",
        "description": "Retrieve order by id",
        "operationId": "getOrderById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of order to return",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/orderGetResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["order"],
        "summary": "Update an order",
        "description": "Update the status of an order",
        "operationId": "updateOrder",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of order to update",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/orderPatchRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/orderPatchResponse"
                }
              }
            }
          },
          "404": {
            "description": "Order not found"
          }
        }
      },
      "delete": {
        "tags": ["order"],
        "summary": "Delete an order",
        "description": "Delete an order",
        "operationId": "deleteOrder",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of order to delete",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Order deleted"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "product": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 10
          },
          "name": {
            "type": "string",
            "example": "Smash da casa"
          },
          "price": {
            "type": "string",
            "example": "30.5"
          },
          "description": {
            "type": "string",
            "example": "2x hambúrguer 200g, queijo, cheddar, tomate, alface, picles, cebola, molho da casa"
          },
          "image": {
            "type": "string",
            "example": "https://fastfood.com/image.png"
          },
          "categoryId": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2022-01-01T00:00:00.000Z"
          }
        }
      },
      "productRequest": {
        "type": "object",
        "required": ["name", "price", "description", "imgCover", "categoryId"],
        "properties": {
          "name": {
            "type": "string",
            "example": "Smash da casa"
          },
          "price": {
            "type": "number",
            "format": "float",
            "example": "30.5"
          },
          "description": {
            "type": "string",
            "example": "2x hambúrguer 200g, queijo, cheddar, tomate, alface, picles, cebola, molho da casa"
          },
          "imgCover": {
            "type": "string",
            "example": "https://fastfood.com/image.png"
          },
          "categoryId": {
            "type": "integer",
            "format": "int64",
            "example": 1
          }
        }
      },
      "productOrder": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 10
          },
          "productId": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "amount": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "note": {
            "type": "string",
            "example": "Sem cebola"
          },
          "total": {
            "type": "string",
            "example": "30.5"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2022-01-01T00:00:00.000Z"
          }
        }
      },
      "productOrderRequest": {
        "type": "object",
        "required": ["productId", "amount", "note", "total"],
        "properties": {
          "productId": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "amount": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "note": {
            "type": "string",
            "example": "Sem cebola"
          },
          "total": {
            "type": "number",
            "format": "float",
            "example": "30.5"
          }
        }
      },
      "orderRequest": {
        "type": "object",
        "required": [
          "code",
          "nameCostumer",
          "total",
          "payment",
          "productOrder"
        ],
        "properties": {
          "code": {
            "type": "integer",
            "format": "int64",
            "example": 200
          },
          "nameCostumer": {
            "type": "string",
            "example": "Julieta"
          },
          "total": {
            "type": "number",
            "format": "float",
            "example": "30.5"
          },
          "productOrder": {
            "type": "array",
            "items": {
              "type": "number",
              "format": "int64",
              "example": 1
            }
          },
          "payment": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "example": "credit",
                "enum": ["credit", "debit", "inCash"]
              },
              "change": {
                "type": "number",
                "format": "float",
                "example": "0"
              },
              "total": {
                "type": "number",
                "format": "float",
                "example": "30.5"
              }
            }
          }
        }
      },
      "order": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 10
          },
          "code": {
            "type": "integer",
            "format": "int64",
            "example": 200
          },
          "nameCostumer": {
            "type": "string",
            "example": "Julieta"
          },
          "total": {
            "type": "string",
            "format": "float",
            "example": "30.5"
          },
          "status": {
            "type": "string",
            "description": "Order status",
            "example": "onGoing",
            "enum": ["onGoing", "finished", "delivered"]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2022-01-01T00:00:00.000Z"
          }
        }
      },
      "orderPatchRequest": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Order status",
            "example": "finished",
            "enum": ["onGoing", "finished", "delivered"]
          }
        }
      },
      "orderPatchResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 10
          },
          "code": {
            "type": "integer",
            "format": "int64",
            "example": 200
          },
          "nameCostumer": {
            "type": "string",
            "example": "Julieta"
          },
          "total": {
            "type": "string",
            "format": "float",
            "example": "30.5"
          },
          "status": {
            "type": "string",
            "description": "Order status",
            "example": "finished",
            "enum": ["onGoing", "finished", "delivered"]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2022-01-01T00:00:00.000Z"
          }
        }
      },
      "orderGetResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 10
          },
          "status": {
            "type": "string",
            "description": "Order status",
            "example": "finished",
            "enum": ["onGoing", "finished", "delivered"]
          },
          "code": {
            "type": "integer",
            "format": "int64",
            "example": 200
          },
          "nameCostumer": {
            "type": "string",
            "example": "Julieta"
          },
          "total": {
            "type": "string",
            "example": "30.5"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2022-01-01T00:00:00.000Z"
          },
          "payment": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "format": "int64",
                  "example": 1
                },
                "type": {
                  "type": "string",
                  "example": "credit",
                  "enum": ["credit", "debit", "inCash"]
                },
                "change": {
                  "type": "string",
                  "example": "0"
                },
                "total": {
                  "type": "string",
                  "example": "30.5"
                }
              }
            }
          },
          "productOrder": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "format": "int64",
                  "example": 1
                },
                "amount": {
                  "type": "integer",
                  "format": "int64",
                  "example": 1
                },
                "note": {
                  "type": "string",
                  "example": "Sem cebola"
                },
                "additionalIds": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                      },
                      "name": {
                        "type": "string",
                        "example": "Bacon"
                      },
                      "price": {
                        "type": "string",
                        "example": "10.5"
                      },
                      "description": {
                        "type": "string",
                        "example": "10g"
                      }
                    }
                  }
                },
                "product": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "format": "int64",
                      "example": 1
                    },
                    "name": {
                      "type": "string",
                      "example": "Smash da casa"
                    },
                    "imgCover": {
                      "type": "string",
                      "example": "https://fastfood.com/image.png"
                    },
                    "price": {
                      "type": "string",
                      "example": "30.5"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "category": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Combos"
          },
          "imgCover": {
            "type": "string",
            "example": "https://fastfood.com/image.png"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2022-01-01T00:00:00.000Z"
          },
          "product": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/product"
            }
          }
        }
      },
      "categoryCreateResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Combos"
          },
          "imgCover": {
            "type": "string",
            "example": "https://fastfood.com/image.png"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2022-01-01T00:00:00.000Z"
          }
        }
      },
      "categoryRequest": {
        "type": "object",
        "required": ["name", "imgCover"],
        "properties": {
          "name": {
            "type": "string",
            "example": "Combos"
          },
          "imgCover": {
            "type": "string",
            "example": "https://fastfood.com/image.png"
          }
        }
      },
      "additional": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Bacon"
          },
          "price": {
            "type": "string",
            "example": "1"
          },
          "type": {
            "type": "string",
            "example": "ingredient"
          },
          "description": {
            "type": "string",
            "example": "10g"
          },
          "imgCover": {
            "type": "string",
            "example": "https://fastfood.com/image.png"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2022-01-01T00:00:00.000Z"
          }
        }
      },
      "additionalRequest": {
        "type": "object",
        "required": ["name", "price", "type", "description", "imgCover"],
        "properties": {
          "name": {
            "type": "string",
            "example": "Bacon"
          },
          "price": {
            "type": "string",
            "example": "1"
          },
          "type": {
            "type": "string",
            "example": "ingredient"
          },
          "description": {
            "type": "string",
            "example": "10g"
          },
          "imgCover": {
            "type": "string",
            "example": "https://fastfood.com/image.png"
          }
        }
      }
    }
  }
}
